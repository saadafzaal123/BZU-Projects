/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servergui;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.BorderLayout;
import java.awt.Font;
import javax.swing.*;
import javax.swing.border.Border;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.awt.*;
import java.io.*;

/**
 *
 * @author Saad Afzaal
 */
public class MyGroups extends javax.swing.JFrame {

    private String Username;
    /**
     * Creates new form MyGroups
     */
    public MyGroups(String username) 
    {
        Username = username;
        
        initComponents();
        
        MyGroups_Label.setForeground(Color.blue);
        
        FillGroupCombo();
        FillMemberCombo();     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        LogOut_Label = new javax.swing.JLabel();
        AddContacts_Label = new javax.swing.JLabel();
        DeleteContacts_Label = new javax.swing.JLabel();
        EditContacts_Label = new javax.swing.JLabel();
        NewGroup_Label = new javax.swing.JLabel();
        MyGroups_Label = new javax.swing.JLabel();
        Chat_Label = new javax.swing.JLabel();
        Contacts_Label = new javax.swing.JLabel();
        Group_ComboBox = new javax.swing.JComboBox<>();
        Member_ComboBox = new javax.swing.JComboBox<>();
        Add_Button = new javax.swing.JButton();
        Delete_Button = new javax.swing.JButton();
        Display_Members_Button = new javax.swing.JButton();
        Delete_Group_Button = new javax.swing.JButton();
        Groups_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Members_Window = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyGroups");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("SoftChat");

        LogOut_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LogOut_Label.setText("LogOut");
        LogOut_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOut_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogOut_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogOut_LabelMouseExited(evt);
            }
        });

        AddContacts_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AddContacts_Label.setText("AddContacts");
        AddContacts_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddContacts_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddContacts_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddContacts_LabelMouseExited(evt);
            }
        });

        DeleteContacts_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DeleteContacts_Label.setText("DeleteContacts");
        DeleteContacts_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteContacts_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeleteContacts_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeleteContacts_LabelMouseExited(evt);
            }
        });

        EditContacts_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EditContacts_Label.setText("EditContacts");
        EditContacts_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditContacts_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditContacts_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditContacts_LabelMouseExited(evt);
            }
        });

        NewGroup_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        NewGroup_Label.setText("NewGroup");
        NewGroup_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewGroup_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewGroup_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NewGroup_LabelMouseExited(evt);
            }
        });

        MyGroups_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MyGroups_Label.setText("MyGroups");
        MyGroups_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MyGroups_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MyGroups_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MyGroups_LabelMouseExited(evt);
            }
        });

        Chat_Label.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        Chat_Label.setText("CHAT");
        Chat_Label.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Chat_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Chat_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Chat_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Chat_LabelMouseExited(evt);
            }
        });

        Contacts_Label.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        Contacts_Label.setText("CONTACTS");
        Contacts_Label.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Contacts_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Contacts_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Contacts_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Contacts_LabelMouseExited(evt);
            }
        });

        Group_ComboBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Group_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Group" }));

        Member_ComboBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Member_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Member" }));

        Add_Button.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Add_Button.setText("ADD Members");
        Add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_ButtonActionPerformed(evt);
            }
        });

        Delete_Button.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Delete_Button.setText("Delete Members");
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        Display_Members_Button.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Display_Members_Button.setText("Display Members");
        Display_Members_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Display_Members_ButtonActionPerformed(evt);
            }
        });

        Delete_Group_Button.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Delete_Group_Button.setText("Delete Group");
        Delete_Group_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Group_ButtonActionPerformed(evt);
            }
        });

        Groups_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Groups_Label.setText("Groups");
        Groups_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Groups_LabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Groups_LabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Groups_LabelMouseExited(evt);
            }
        });

        Members_Window.setColumns(20);
        Members_Window.setFont(new java.awt.Font("Monospaced", 1, 15)); // NOI18N
        Members_Window.setRows(5);
        jScrollPane1.setViewportView(Members_Window);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(DeleteContacts_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddContacts_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LogOut_Label)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Groups_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MyGroups_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NewGroup_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EditContacts_Label)
                        .addGap(33, 33, 33))))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(Add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Group_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Member_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Chat_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Contacts_Label))
                    .addComponent(jScrollPane1))
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Delete_Group_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Display_Members_Button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LogOut_Label)
                            .addComponent(AddContacts_Label)
                            .addComponent(DeleteContacts_Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditContacts_Label)
                            .addComponent(NewGroup_Label)
                            .addComponent(MyGroups_Label)
                            .addComponent(Groups_Label)))
                    .addComponent(jLabel1))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Chat_Label)
                    .addComponent(Contacts_Label))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Group_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Member_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(Display_Members_Button)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_Button)
                    .addComponent(Delete_Button))
                .addGap(18, 18, 18)
                .addComponent(Delete_Group_Button)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FillGroupCombo()
    {
        try
        {
            String url = "jdbc:derby://localhost:1527/MyDataBase";
            String uName = "Saad";
            String uPass= "03214061595";

            Connection con = DriverManager.getConnection(url , uName , uPass);
            
            String sql = "SELECT * FROM GROUPS where GROUP_ADMIN = '" + Username + "' ORDER BY GROUP_NAME ASC";
            Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stat.executeQuery(sql);
            
            
            while (rs.next())
            {
                String name = rs.getString("GROUP_NAME");
                
                Group_ComboBox.addItem(name);
            }
            
            AutoCompleteDecorator.decorate(this.Group_ComboBox);
        }
        catch (SQLException se)
        {
            JOptionPane.showMessageDialog(null , se.getMessage());
        }    
    }
    
    private void FillMemberCombo()
    {
        try
        {
            String url = "jdbc:derby://localhost:1527/MyDataBase";
            String uName = "Saad";
            String uPass= "03214061595";

            Connection con = DriverManager.getConnection(url , uName , uPass);
            
            String sql = "SELECT * FROM CONTACTS where USERNAME = '" + Username + "' ORDER BY NAME ASC";
            Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stat.executeQuery(sql);
            
            
            while (rs.next())
            {
                String name = rs.getString("NAME");
                
                Member_ComboBox.addItem(name);
            }
            
            AutoCompleteDecorator.decorate(this.Member_ComboBox);
        }
        catch (SQLException se)
        {
            JOptionPane.showMessageDialog(null , se.getMessage());
        }    
    }
    
    private void LogOut_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOut_LabelMouseClicked
        // TODO add your handling code here:

        try
        {
            String url = "jdbc:derby://localhost:1527/MyDataBase";
            String uName = "Saad";
            String uPass= "03214061595";

            Connection con = DriverManager.getConnection(url , uName , uPass);

            String sql = "SELECT * FROM SESSION where USERNAME = '" + Username + "'";
            Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stat.executeQuery(sql);

            rs.first();
            rs.updateBoolean("SESSION_ID", false);
            rs.updateRow();

            /*String sql1 = "SELECT * FROM LOGGINCHECK where ISLOGGIN = '" + "Yes" + "'";
            Statement stat1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs1= stat1.executeQuery(sql1);

            rs1.absolute(1);
            rs1.deleteRow();

            stat1.close();
            rs1.close();*/

            ChatSoft cs = new ChatSoft();
            cs.setVisible(true);
            cs.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.setVisible(false);
        }
        catch (SQLException se)
        {
            JOptionPane.showMessageDialog(null , se.getMessage());
        }
    }//GEN-LAST:event_LogOut_LabelMouseClicked

    private void LogOut_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOut_LabelMouseEntered
        // TODO add your handling code here:

        LogOut_Label.setBackground(Color.blue);
        LogOut_Label.setForeground(Color.blue);
    }//GEN-LAST:event_LogOut_LabelMouseEntered

    private void LogOut_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOut_LabelMouseExited
        // TODO add your handling code here:

        LogOut_Label.setBackground(Color.gray);
        LogOut_Label.setForeground(Color.black);
    }//GEN-LAST:event_LogOut_LabelMouseExited

    private void AddContacts_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddContacts_LabelMouseClicked
        // TODO add your handling code here:

        AddContacts ac = new AddContacts(Username);
        ac.setVisible(true);
        ac.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_AddContacts_LabelMouseClicked

    private void AddContacts_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddContacts_LabelMouseEntered
        // TODO add your handling code here:

        AddContacts_Label.setBackground(Color.blue);
        AddContacts_Label.setForeground(Color.blue);
    }//GEN-LAST:event_AddContacts_LabelMouseEntered

    private void AddContacts_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddContacts_LabelMouseExited
        // TODO add your handling code here:

        AddContacts_Label.setBackground(Color.gray);
        AddContacts_Label.setForeground(Color.black);
    }//GEN-LAST:event_AddContacts_LabelMouseExited

    private void DeleteContacts_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteContacts_LabelMouseClicked
        // TODO add your handling code here:

        DeleteContacts dc = new DeleteContacts(Username);
        dc.setVisible(true);
        dc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        dc.setSize(455,500);
        this.setVisible(false);
    }//GEN-LAST:event_DeleteContacts_LabelMouseClicked

    private void DeleteContacts_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteContacts_LabelMouseEntered
        // TODO add your handling code here:

        DeleteContacts_Label.setForeground(Color.blue);
    }//GEN-LAST:event_DeleteContacts_LabelMouseEntered

    private void DeleteContacts_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteContacts_LabelMouseExited
        // TODO add your handling code here:

        DeleteContacts_Label.setBackground(Color.gray);
        DeleteContacts_Label.setForeground(Color.black);
    }//GEN-LAST:event_DeleteContacts_LabelMouseExited

    private void EditContacts_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditContacts_LabelMouseClicked
        // TODO add your handling code here:

        DeleteContacts dc = new DeleteContacts(Username);
        dc.setVisible(true);
        dc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        dc.setSize(455,500);
        this.setVisible(false);
    }//GEN-LAST:event_EditContacts_LabelMouseClicked

    private void EditContacts_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditContacts_LabelMouseEntered
        // TODO add your handling code here:

        EditContacts_Label.setForeground(Color.blue);
    }//GEN-LAST:event_EditContacts_LabelMouseEntered

    private void EditContacts_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditContacts_LabelMouseExited
        // TODO add your handling code here:

        EditContacts_Label.setBackground(Color.gray);
        EditContacts_Label.setForeground(Color.black);
    }//GEN-LAST:event_EditContacts_LabelMouseExited

    private void NewGroup_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewGroup_LabelMouseClicked
        // TODO add your handling code here:

        NewGroup ng = new NewGroup(Username);
        ng.setVisible(true);
        ng.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_NewGroup_LabelMouseClicked

    private void NewGroup_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewGroup_LabelMouseEntered
        // TODO add your handling code here:

        NewGroup_Label.setForeground(Color.blue);
    }//GEN-LAST:event_NewGroup_LabelMouseEntered

    private void NewGroup_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewGroup_LabelMouseExited
        // TODO add your handling code here:

        NewGroup_Label.setBackground(Color.gray);
        NewGroup_Label.setForeground(Color.black);
    }//GEN-LAST:event_NewGroup_LabelMouseExited

    private void MyGroups_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyGroups_LabelMouseClicked
        // TODO add your handling code here:
        
        MyGroups mg = new MyGroups(Username);
        mg.setVisible(true);
        mg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_MyGroups_LabelMouseClicked

    private void MyGroups_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyGroups_LabelMouseEntered
        // TODO add your handling code here:

        MyGroups_Label.setForeground(Color.blue);
    }//GEN-LAST:event_MyGroups_LabelMouseEntered

    private void MyGroups_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MyGroups_LabelMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_MyGroups_LabelMouseExited

    private void Chat_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chat_LabelMouseClicked
        // TODO add your handling code here:

        Chat c = new Chat(Username);
        c.setVisible(true);
        c.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_Chat_LabelMouseClicked

    private void Chat_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chat_LabelMouseEntered
        // TODO add your handling code here:

        Chat_Label.setBackground(Color.blue);
        Chat_Label.setForeground(Color.blue);
    }//GEN-LAST:event_Chat_LabelMouseEntered

    private void Chat_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chat_LabelMouseExited
        // TODO add your handling code here:

        Chat_Label.setBackground(Color.gray);
        Chat_Label.setForeground(Color.black);
    }//GEN-LAST:event_Chat_LabelMouseExited

    private void Contacts_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contacts_LabelMouseClicked
        // TODO add your handling code here:

        Contacts c = new Contacts(Username);
        c.setVisible(true);
        c.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_Contacts_LabelMouseClicked

    private void Contacts_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contacts_LabelMouseEntered
        // TODO add your handling code here:

        Contacts_Label.setBackground(Color.blue);
        Contacts_Label.setForeground(Color.blue);
    }//GEN-LAST:event_Contacts_LabelMouseEntered

    private void Contacts_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contacts_LabelMouseExited
        // TODO add your handling code here:

        Contacts_Label.setBackground(Color.gray);
        Contacts_Label.setForeground(Color.black);
    }//GEN-LAST:event_Contacts_LabelMouseExited

    private void Display_Members_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Display_Members_ButtonActionPerformed
        // TODO add your handling code here:
        
        String group_name = (String)Group_ComboBox.getSelectedItem();
        
        String Group_Name = get_group(group_name);
        
        try
        {
            if(Group_Name.equals(""))
            {
                JOptionPane.showMessageDialog(null , "Invalid Group!");
            }
            else
            {
                Members_Window.setText("");
                Members_Window.setLineWrap(true);
                Members_Window.setWrapStyleWord(true);
                Members_Window.setOpaque(true);
                Members_Window.append("\t\t" + Group_Name + "\t");
                Members_Window.append("\nS.No" + "    Name" + "\t\t\t" + " ContactNo\n");
            
                try
                {
                    String url = "jdbc:derby://localhost:1527/MyDataBase";
                    String uName = "Saad";
                    String uPass= "03214061595";

                    Connection con = DriverManager.getConnection(url , uName , uPass);
                
                    String sql = "SELECT * FROM GROUP_MEMBERS where GROUP_NAME = '" + Group_Name + "'";
                    Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
                    ResultSet rs = stat.executeQuery(sql);
                
                    int count = 0;
                
                    String format = "%-25s%s";
                    String format2 = "%-8s%s";
                
                    while(rs.next())
                    {
                        String GM_Name = rs.getString("GROUP_MEMBER_NAME");
                        String GM_ContactNo = rs.getString("GROUP_MEMBER_CONTACTNO");
                    
                        count ++;
                    
                        String text2 = String.format(format2 , count , "");
                        String text = String.format(format , GM_Name , GM_ContactNo);
                    
                        Members_Window.append(text2 + text + "\n");
                    }
                }
                catch(SQLException se)
                {
                    JOptionPane.showMessageDialog(null , "Empty Group! No Members Exist!");
                }
            }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_Display_Members_ButtonActionPerformed

    private void Add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_ButtonActionPerformed
        // TODO add your handling code here:
        
        String group_name = (String)Group_ComboBox.getSelectedItem();
        String Member_Name = (String)Member_ComboBox.getSelectedItem();
        
        String Member_No = get_member_No(Member_Name);
        String Group_Name = get_group(group_name);
        
        try
        {
            if(Member_No.equals("") || Group_Name.equals(""))
            {
                JOptionPane.showMessageDialog(null , "Invalid Group or Member!");
            }
            else
            {
               try
               {
                    String url = "jdbc:derby://localhost:1527/MyDataBase";
                    String uName = "Saad";
                    String uPass= "03214061595";

                    Connection con = DriverManager.getConnection(url , uName , uPass);
                
                    String sql = "SELECT * FROM GROUP_MEMBERS where GROUP_NAME = '" + Group_Name +"' AND GROUP_Member_CONTACTNO = '" + Member_No + "'";
                    Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
                    ResultSet rs = stat.executeQuery(sql);
                            
                    rs.absolute(1);
                
                    String GM_CNO = rs.getString("GROUP_Member_CONTACTNO");
                
                    if(!GM_CNO.equals(""))
                    {
                        JOptionPane.showMessageDialog(null , "This Member already added to the Group!");
                    }
                
                    stat.close();
                    rs.close();
                }
                catch(SQLException se)
                {
                    try
                    {
                        String url = "jdbc:derby://localhost:1527/MyDataBase";
                        String uName = "Saad";
                        String uPass= "03214061595";

                        Connection con = DriverManager.getConnection(url , uName , uPass);
                
                        String sql1 = "SELECT * FROM GROUP_MEMBERS";
                        Statement stat1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        ResultSet rs1 = stat1.executeQuery(sql1);
            
                        rs1.moveToInsertRow();
                        rs1.updateString("GROUP_NAME",Group_Name);
                        rs1.updateString("GROUP_Member_Name", Member_Name);
                        rs1.updateString("GROUP_Member_CONTACTNO", Member_No);
                        rs1.updateString("GROUP_Admin", Username);
                        rs1.insertRow(); 
                
                        stat1.close();
                        rs1.close();
                
                        JOptionPane.showMessageDialog(null , Member_Name + " Added to the Group Successfully!");
                    
                        MyGroups mg = new MyGroups(Username);
                        mg.setVisible(true);
                        mg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        this.setVisible(false);
                    }
                    catch(SQLException sx)
                    {
                        JOptionPane.showMessageDialog(null , sx.getMessage());
                    }
                }
            }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_Add_ButtonActionPerformed

    private String get_group(String Gname)
    {
        try
        {
            String url = "jdbc:derby://localhost:1527/MyDataBase";
            String uName = "Saad";
            String uPass= "03214061595";

            Connection con = DriverManager.getConnection(url , uName , uPass);
            
            String sql = "SELECT * FROM GROUPS where GROUP_NAME = '" + Gname + "'";
            Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stat.executeQuery(sql);
            
            
            rs.first();
            String G_name = rs.getString("GROUP_NAME");
            
            stat.close();
            rs.close();
            
            return G_name;
        }
        catch (SQLException se)
        {
            JOptionPane.showMessageDialog(null , "Please Select Valid Group!");
            return null;       
        }
    }
    
    private String get_member_No(String Mname)
    {
        try
        {
            String url = "jdbc:derby://localhost:1527/MyDataBase";
            String uName = "Saad";
            String uPass= "03214061595";

            Connection con = DriverManager.getConnection(url , uName , uPass);
            
            String sql = "SELECT * FROM CONTACTS where USERNAME = '" + Username + "' AND NAME = '" + Mname + "' ";
            Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rs = stat.executeQuery(sql);
            
            rs.first();
            String M_No = rs.getString("PHONENO");
            
            stat.close();
            rs.close();
            
            return M_No;
        }
        catch (SQLException se)
        {
            JOptionPane.showMessageDialog(null , "Please Select Valid Member!" /*se.getMessage()*/);
            return null;            
        }
    }
    
    private void Delete_Group_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Group_ButtonActionPerformed
        // TODO add your handling code here:
        
        String group_name = (String)Group_ComboBox.getSelectedItem();
        
        String Group_Name = get_group(group_name);
        
        try
        {
            if(Group_Name.equals(""))
            {
                JOptionPane.showMessageDialog(null , "Invalid Group!");
            }
            else
            {
                try
                {
                    String url = "jdbc:derby://localhost:1527/MyDataBase";
                    String uName = "Saad";
                    String uPass= "03214061595";

                    Connection con = DriverManager.getConnection(url , uName , uPass);
            
           
                    String sql = "SELECT * FROM GROUPS where GROUP_NAME = '" + Group_Name +"'";
                    Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs = stat.executeQuery(sql);
            
                    rs.absolute(1);
                    rs.deleteRow();
            
                    stat.close();
                    rs.close();
                
                    String sql1 = "SELECT * FROM GROUP_MEMBERS where GROUP_NAME = '" + Group_Name +"'";
                    Statement stat1 = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs1 = stat1.executeQuery(sql1);
            
                    while(rs1.next())
                    {
                        rs1.deleteRow();
                    }
            
                    stat1.close();
                    rs1.close();
                
                    JOptionPane.showMessageDialog(null , "Group Deleted Successfully!");
                
                    MyGroups mg = new MyGroups(Username);
                    mg.setVisible(true);
                    mg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.setVisible(false);
                }
                catch (SQLException se)
                {
                    JOptionPane.showMessageDialog(null , se.getMessage());
                }      
            }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_Delete_Group_ButtonActionPerformed

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        // TODO add your handling code here:
        
        String group_name = (String)Group_ComboBox.getSelectedItem();
        String Member_Name = (String)Member_ComboBox.getSelectedItem();
        
        String Member_No = get_member_No(Member_Name);
        String Group_Name = get_group(group_name);
        
        try
        {
            if(Member_No.equals("") || Group_Name.equals(""))
            {
                JOptionPane.showMessageDialog(null , "Invalid Group or Member!");
            }
            else
            {
                try
                {
                    String url = "jdbc:derby://localhost:1527/MyDataBase";
                    String uName = "Saad";
                    String uPass= "03214061595";

                    Connection con = DriverManager.getConnection(url , uName , uPass);
            
           
                    String sql = "SELECT * FROM GROUP_MEMBERS where GROUP_NAME = '" + Group_Name +"' AND GROUP_Member_CONTACTNO = '" + Member_No + "'";
                    Statement stat = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs = stat.executeQuery(sql);
            
                    rs.absolute(1);
                    rs.deleteRow();
            
                    stat.close();
                    rs.close();
                
                    JOptionPane.showMessageDialog(null , Member_Name + " Deleted from the Group Successfully!");
                
                    MyGroups mg = new MyGroups(Username);
                    mg.setVisible(true);
                    mg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    this.setVisible(false);
                }
                catch (SQLException se)
                {
                    JOptionPane.showMessageDialog(null , "This Member Already does not exist in this Group!" /*se.getMessage()*/);
                }      
            }
        }
        catch(Exception e)
        {
            
        }
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Groups_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Groups_LabelMouseClicked
        // TODO add your handling code here:
        
        Groups g = new Groups(Username);
        g.setVisible(true);
        g.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_Groups_LabelMouseClicked

    private void Groups_LabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Groups_LabelMouseEntered
        // TODO add your handling code here:

        Groups_Label.setForeground(Color.blue);
    }//GEN-LAST:event_Groups_LabelMouseEntered

    private void Groups_LabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Groups_LabelMouseExited
        // TODO add your handling code here:

        Groups_Label.setBackground(Color.gray);
        Groups_Label.setForeground(Color.black);
    }//GEN-LAST:event_Groups_LabelMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyGroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyGroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyGroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyGroups.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       // java.awt.EventQueue.invokeLater(new Runnable() {
        //    public void run() {
        //        new MyGroups().setVisible(true);
         //   }
       // });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddContacts_Label;
    private javax.swing.JButton Add_Button;
    private javax.swing.JLabel Chat_Label;
    private javax.swing.JLabel Contacts_Label;
    private javax.swing.JLabel DeleteContacts_Label;
    private javax.swing.JButton Delete_Button;
    private javax.swing.JButton Delete_Group_Button;
    private javax.swing.JButton Display_Members_Button;
    private javax.swing.JLabel EditContacts_Label;
    private javax.swing.JComboBox<String> Group_ComboBox;
    private javax.swing.JLabel Groups_Label;
    private javax.swing.JLabel LogOut_Label;
    private javax.swing.JComboBox<String> Member_ComboBox;
    private javax.swing.JTextArea Members_Window;
    private javax.swing.JLabel MyGroups_Label;
    private javax.swing.JLabel NewGroup_Label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
